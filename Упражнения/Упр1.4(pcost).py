"""
- Обзор того, как определять простые функции
- Обработка исключений

*Файлы созданы:* Нет

*Файлы изменены:* `pcost.py`

## (a) Определение функции

Возьмите программу `pcost.py`, которую вы написали в предыдущем упражнении, и
преобразовать его в функцию `portfolio_cost(filename)`, которая принимает
имя файла в качестве входных данных, считывает данные портфеля из этого файла и возвращает
общая стоимость портфеля в виде числа с плавающей запятой. Как только вы
написали функцию, пусть ваша программа вызывает функцию просто
добавив это утверждение в конце:

```
print(portfolio_cost('Данные/portfolio.dat'))
```

Запустите вашу программу и убедитесь, что она выдает тот же результат, что и
до.


## (b) Добавление обработки ошибок

При написании программ, обрабатывающих данные, часто приходится сталкиваться с
ошибки, связанные с неправильными данными (неверный формат, отсутствующие поля и т. д.). Изменить
ваша программа `pcost.py` для чтения файла данных `Data/portfolio3.dat`
и запустите его (подсказка: он должен вылететь).

Немного измените свою функцию, чтобы она могла восстанавливаться из строк
с плохими данными. Например, функции преобразования `int()` и
`float()` вызывают исключение `ValueError`, если они не могут преобразовать
вход. Используйте `try` и `except`, чтобы поймать и распечатать предупреждающее сообщение.
о строках, которые не могут быть проанализированы. Например:

```
Не удалось разобрать: "C - 53.08\n"
Причина: недопустимый литерал для int() с основанием 10: '-'
Не удалось разобрать: "DIS - 34.20\n"
Причина: недопустимый литерал для int() с основанием 10: '-'
...
```

Попробуйте запустить вашу программу в файле Data/portfolio3.dat.
снова. Он должен работать успешно, несмотря на напечатанные предупреждающие сообщения.

## (c) Интерактивное экспериментирование

Запустите вашу программу `pcost.py` и вызовите
функция `portfolio_cost()` непосредственно из интерактивного
устный переводчик.

```питон
>>> portfolio_cost('Данные/portfolio.dat')
44671,15
>>> portfolio_cost('Данные/portfolio2.dat')
19908,75
>>>
```

Примечание. Для этого вам может потребоваться запустить python с ключом `-i`
вариант. Например:

```
bash% python3 -i pcost.py
```

"""
p = 'D:\PycharmProjects\Learn\dabeaz_course\python-mastery\Data\portfolio3.dat'


def portfolio_cost(file) :
    sum1 = 0
    sum2 = 0
    with open(file, 'r') as f :
        for line in f:
            sp = (line.strip().split(' '))
            try:
                sum1 += float(sp[1])
                sum2 += float(sp[2])
            except ValueError as ve:
                print(f'Строка {line} не подлежит парсингу')
                print(f'Причина: {ve}')
    return sum1 * sum2


print(portfolio_cost(p))
